% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qqplot.R
\name{qqresid}
\alias{qqresid}
\title{qqplot with DPIT residuals}
\usage{
qqresid(model, scale="normal")
}
\arguments{
\item{model}{glm model object (eg. \code{glm()}, \code{glm.nb()}, \code{zeroinfl()}, and \code{polr()})}

\item{scale}{You can choose the scale of qqplot among \code{normal} and \code{uniform} scales. The defalut scale is \code{normal}.}
}
\description{
\code{qqresid} is fucntion for plotting QQ-plot with residuals based on the probability integral transform.
Note that this function does not return residuals. To get both residuals and QQ-plot,
use \code{\link[=resid_disc]{resid_disc()}}, \code{\link[=resid_semiconti]{resid_semiconti()}} and \code{\link[=resid_zeroinfl]{resid_zeroinfl()}}.
}
\details{
The calculated residuals follows the uniform distribution under the adequate model assumption.
Also, taking the normal quantile transformation to DPIT residuals,
\deqn{\Phi^{-1}[\hat{r}(Y_i|X_i)], i=1,2,3,...,n,}
the standard normal distribution serves as the null pattern. \cr

Users can choose \code{scale} argument between \code{normal} and \code{uniform}. The default value is \code{normal} as an usual QQ plot.
}
\examples{
library(glmnet)
n <- 1e2
b <- c(2, 1, -2)
x1 <- rnorm(n); x2 <- rbinom(n,1,0.7)
y <-  rpois(n, exp(b[1]+b[2]*x1+b[3]*x2))

m1 <- glm(y~x1+x2, family=poisson)
qqresid(m1) ## qqplot of poisson regression
}
\seealso{
\code{\link[=resid_disc]{resid_disc()}}, \code{\link[=resid_semiconti]{resid_semiconti()}}, \code{\link[=resid_zeroinfl]{resid_zeroinfl()}}
}
